service: node-ts-serverless
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-west-1

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["TitleTable", "Arn"] }

functions:
  createLink:
    handler: src/handler.createLink
    events:
      - httpApi:
          path: /link
          method: post
          cors: 
            origin: '*'
            headers:
              - Content-Type
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Origin
            allowCredentials: true
  listLink:
    handler: src/handler.listLink
    events:
      - httpApi:
          path: /link
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Startlower
              - Text
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Origin
            allowCredentials: false

plugins:
  - serverless-plugin-typescript
  - serverless-offline

resources:
  Resources:
    TitleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TitleTable
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
